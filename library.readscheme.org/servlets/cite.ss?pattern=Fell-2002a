<html><head><title>Citation: The Structure and Interpretation of the Computer Science Curriculum</title><link rel="stylesheet" href="../basic.css" type="text/css" /></head><body bgcolor="white"><table width="100%"><tr valign="top"><td width="124"><table width="124"><tr width="124" height="45"><td width="124" height="45"><a href="http://readscheme.org"><img width="124" height="45" border="0" alt="Readscheme.org" src="../nav-logo.gif" /></a></td></tr><tr width="124" height="124"><td width="124" height="124"><a href="../index.html" target="_top"><img width="124" height="124" border="0" alt="Scheme Bibliography Home" src="../nav_mainlogo.gif" /></a></td></tr><tr width="124" height="30"><td width="124" height="30"><a href="../page1.html" target="_top"><img width="124" height="30" border="0" alt="Classics" src="../nav_classics.gif" /></a></td></tr><tr width="124" height="18"><td width="124" height="18"><a href="../page2.html" target="_top"><img width="124" height="18" border="0" alt="Semantics" src="../nav_sem.gif" /></a></td></tr><tr width="124" height="18"><td width="124" height="18"><a href="../page3.html" target="_top"><img width="124" height="18" border="0" alt="Macros" src="../nav_macros.gif" /></a></td></tr><tr width="124" height="18"><td width="124" height="18"><a href="../page4.html" target="_top"><img width="124" height="18" border="0" alt="Objects" src="../nav_objects.gif" /></a></td></tr><tr width="124" height="30"><td width="124" height="30"><a href="../page5.html" target="_top"><img width="124" height="30" border="0" alt="Modules" src="../nav_modules.gif" /></a></td></tr><tr width="124" height="18"><td width="124" height="18"><a href="../page6.html" target="_top"><img width="124" height="18" border="0" alt="Continuations" src="../nav_cps.gif" /></a></td></tr><tr width="124" height="30"><td width="124" height="30"><a href="../pagexml.html" target="_top"><img width="124" height="30" border="0" alt="Web Programming" src="../nav_xml.gif" /></a></td></tr><tr width="124" height="18"><td width="124" height="18"><a href="../page7.html" target="_top"><img width="124" height="18" border="0" alt="Applications" src="../nav_appl.gif" /></a></td></tr><tr width="124" height="18"><td width="124" height="18"><a href="../page8.html" target="_top"><img width="124" height="18" border="0" alt="Implementation" src="../nav_impl.gif" /></a></td></tr><tr width="124" height="30"><td width="124" height="30"><a href="../page9.html" target="_top"><img width="124" height="30" border="0" alt="Concurrent Programming" src="../nav_conc.gif" /></a></td></tr><tr width="124" height="30"><td width="124" height="30"><a href="../page10.html" target="_top"><img width="124" height="30" border="0" alt="Partial Evaluation" src="../nav_pe.gif" /></a></td></tr><tr width="124" height="18"><td width="124" height="18"><a href="../page11.html" target="_top"><img width="124" height="18" border="0" alt="Reflection" src="../nav_reflect.gif" /></a></td></tr><tr width="124" height="30"><td width="124" height="30"><a href="../whats_new.html" target="_top"><img width="124" height="30" border="0" alt="Recent Additions" src="../nav_recent.gif" /></a></td></tr><tr width="124" height="30"><td width="124" height="30"><a href="../browse.html" target="_top"><img width="124" height="30" border="0" alt="Browse by Author" src="../nav_browse.gif" /></a></td></tr><tr width="124" height="18"><td width="124" height="18"><a href="../search.html" target="_top"><img width="124" height="18" border="0" alt="Search..." src="../nav_search.gif" /></a></td></tr></table></td><td width="20"><img width="20" height="1" border="0" src="../imgs/dot_clear.gif" /></td><td><h2>The Structure and Interpretation of the Computer Science Curriculum</h2><h3>Matthias Felleisen, Robert Bruce Findler, Matthew Flatt and Shriram Krishnamurthi</h3><p><u>Abstract:</u></p><p>Nearly twenty years ago, <em>Structure and Interpretation of Computer Programs (SICP)</em> changed the intellectual landscape of introductory computing courses. Unfortunately, three problems---its lack of an explicit program design methodology, its reliance on domain knowledge, and the whimsies of Scheme---have made it integrate poorly with the rest of the curriculum and fail to maintain its position in several departments.<p />In this paper we analyze the structural constraints of the typical computer science curriculum and interpret <em>SICP</em> and Scheme from this perspective. We then discuss how our new book, <em>How to Design Programs</em>, overcomes <em>SICP</em>'s problems. We hope that this discussion helps instructors understand the structure and interpretation of introductory courses on computer science.</p><p><u>Downloads:</u></p><ul><li><a href="http://people.cs.uchicago.edu/~robby/publications/papers/htdp-sicp-fdpe2002.ps">ps</a></li><li><a href="http://people.cs.uchicago.edu/~robby/publications/papers/htdp-sicp-fdpe2002.pdf">pdf</a></li></ul><p><u>Bibtex citation:</u></p><pre>@inproceedings{
   key = "Fell:2002a"
   author = "Matthias Felleisen, Robert Bruce Findler, Matthew Flatt and Shriram Krishnamurthi"
   title = "The Structure and Interpretation of the Computer Science Curriculum"
   month = "October"
   year = "2002"
   booktitle = "Functional and Declarative Programming in Education (FDPE2002)"
   url = "http://people.cs.uchicago.edu/~robby/publications/papers/htdp-sicp-fdpe2002.ps"
   url = "http://people.cs.uchicago.edu/~robby/publications/papers/htdp-sicp-fdpe2002.pdf"
}
</pre></td></tr></table></body></html>